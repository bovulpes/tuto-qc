digraph "qpp::is_iterable&lt; T, to_void&lt; decltype(std::declval&lt; T &gt;().begin()), decltype(std::declval&lt; T &gt;().end()), decltype(*(std::declval&lt; T &gt;().begin()))&gt; &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="qpp::is_iterable\< T,\l to_void\< decltype(std\l::declval\< T \>().begin\l()), decltype(std::declval\l\< T \>().end()), decltype(*\l(std::declval\< T \>().begin()))\> \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="std::true_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}

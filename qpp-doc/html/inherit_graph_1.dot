digraph "Graphical Class Hierarchy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node130 [label="qpp::internal::Display\l_Impl_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structqpp_1_1internal_1_1_display___impl__.html"];
  Node130 -> Node52 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="qpp::internal::IOManipEigen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1internal_1_1_i_o_manip_eigen.html"];
  Node50 [label="qpp::IDisplay",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_i_display.html",tooltip="Abstract class (interface) that mandates the definition of virtual std::ostream& display(std::ostream..."];
  Node50 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="qpp::Dynamic_bitset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_dynamic__bitset.html",tooltip="Dynamic bitset class, allows the specification of the number of bits at runtime. "];
  Node51 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="qpp::Bit_circuit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_bit__circuit.html",tooltip="Classical reversible circuit simulator. "];
  Node50 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="qpp::internal::IOManipPointer\l\< PointerType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1internal_1_1_i_o_manip_pointer.html"];
  Node50 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="qpp::internal::IOManipRange\l\< InputIterator \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1internal_1_1_i_o_manip_range.html"];
  Node50 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="qpp::qasm::Expr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_expr.html",tooltip="Base class for openQASM expressions. "];
  Node55 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="qpp::qasm::BExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_b_expr.html",tooltip="Class for binary operator expressions. "];
  Node55 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="qpp::qasm::IntExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_int_expr.html",tooltip="Class for integer literal expressions. "];
  Node55 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="qpp::qasm::PiExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_pi_expr.html",tooltip="Class for pi constants. "];
  Node55 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="qpp::qasm::RealExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_real_expr.html",tooltip="Class for floating point literal expressions. "];
  Node55 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="qpp::qasm::UExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_u_expr.html",tooltip="Class for unary operator expressions. "];
  Node55 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="qpp::qasm::VarExpr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_var_expr.html",tooltip="Class for variable expressions. "];
  Node50 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="qpp::qasm::Location",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_location.html",tooltip="Source location class. "];
  Node50 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="qpp::qasm::QASM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_q_a_s_m.html",tooltip="QASM program class. "];
  Node50 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="qpp::qasm::Statement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_statement.html",tooltip="Base class for openQASM statements. "];
  Node64 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="qpp::qasm::Decl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_decl.html",tooltip="Base class for openQASM declarations. "];
  Node65 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="qpp::qasm::GateDecl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_gate_decl.html",tooltip="Class for gate declarations. "];
  Node65 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="qpp::qasm::RegisterDecl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_register_decl.html",tooltip="Class for register declarations. "];
  Node64 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="qpp::qasm::Gate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_gate.html",tooltip="Base class for openQASM gates. "];
  Node68 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="qpp::qasm::BarrierGate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_barrier_gate.html",tooltip="Class for barrier gates. "];
  Node68 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="qpp::qasm::CNOTGate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_c_n_o_t_gate.html",tooltip="Class for CX gates. "];
  Node68 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="qpp::qasm::DeclaredGate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_declared_gate.html",tooltip="Class for declared gate applications. "];
  Node68 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="qpp::qasm::UGate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_u_gate.html",tooltip="Class for U gates. "];
  Node64 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="qpp::qasm::IfStatement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_if_statement.html",tooltip="Class for if statements. "];
  Node64 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="qpp::qasm::MeasureStatement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_measure_statement.html"];
  Node64 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="qpp::qasm::ResetStatement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_reset_statement.html",tooltip="Class for reset statements. "];
  Node50 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="qpp::qasm::Token",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_token.html",tooltip="openQASM token class "];
  Node50 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="qpp::qasm::Varinfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1qasm_1_1_varinfo.html",tooltip="Class for variable accesses. "];
  Node50 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="qpp::QCircuit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_q_circuit.html",tooltip="Quantum circuit description. "];
  Node50 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="qpp::QCircuit::iterator\l::value_type_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_q_circuit_1_1iterator_1_1value__type__.html",tooltip="Value type class for qpp::QCircuit::iterator. "];
  Node50 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="qpp::QEngine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_q_engine.html",tooltip="Quantum circuit engine, executes qpp::QCircuit. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="qpp::QNoisyEngine\<\l NoiseModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_q_noisy_engine.html",tooltip="Noisy quantum circuit engine, executes qpp::QCircuit. "];
  Node50 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="qpp::Timer\< T, CLOCK_T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_timer.html",tooltip="Chronometer. "];
  Node0 [label="qpp::IJSON",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classqpp_1_1_i_j_s_o_n.html",tooltip="Abstract class (interface) that mandates the definition of very basic JSON serialization support..."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
